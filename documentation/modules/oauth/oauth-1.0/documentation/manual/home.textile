h1. OAuth クライアント

このモジュールを使って "Twitter":http://apiwiki.twitter.com/ や "Google":http://code.google.com/apis/accounts/docs/AuthForWebApps.html のような "oauth":http://oauth.net プロバイダに接続することができます。

h2. <a>OAuth 基礎</a>

OAuth プロバイダのユーザデータにアクセスするために、コンシューマ・キーを登録し、取得する必要があります。取得に関する詳細は、プロバイダの web サイトにあるドキュメントを参照してください。

以下に従う必要があります:
* リクエスト URL
* アクセス URL
* 認証 URL
* コンシューマ・キー
* コンシューマ・シークレット

ユーザ毎に、以下のワークフローに従います:
# プロバイダからリクエストトークンを取得します。ユーザは、アプリケーションに対して明示的にアクセス権限を付与するプロバイダのサイトへリダイレクトされなければなりません。
# リクエストトークンとアクセストークンを交換します。
# プロバイダへの REST リクエストによってユーザのデータにアクセスするために、トークンを使ってリクエストを署名します。

プロバイダのポリシーによって、トークンはいつでも破棄される可能性があります。ユーザがアプリケーションに対するアクセス権限を取り消すこともできます。

h2. <a>モジュールを使う</a>

使用する主なクラスは play.modules.oauthclient.OAuthClient です。リクエストを検索し、トークンにアクセスし、リクエストを署名するために使用します。

ユーザのトークンをデータ層に保存する必要があります。このため、ユーザ毎に ICredentials を提供しなければなりません; モデルを継承するクリデンシャルの実装を使うことで、データ層にシリアライズすることができるでしょう。

h2. <a>OAuthClient クラス</a>

Twitter の API に接続するクライアントは、以下のようにして作成します:

bc. OAuthClient client = new OAuthClient(
"http://twitter.com/oauth/request_token",
"http://twitter.com/oauth/access_token",
"http://twitter.com/oauth/authorize",
"aaaaaaaaaaaaaaaaaaaaaa", // Your application's consumer key
"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"); // You application's consumer secret

h2. <a>認証</a>

最初に必要なのはリクエストトークンです:

bc. ICredentials creds = new Credentials();
client.authenticate(creds, callbackURL);

このメソッドを呼ぶと、ユーザは、アプリケーションにユーザのデータにアクセスする権限を与えるかを尋ねられるプロバイダのページにリダイレクトされます。その後、プロバイダは、ユーザデータとして oauth_token と oauth_verifier を含め、コールバックに指定した URL へユーザをリダイレクトします。アクセストークンを取得するために oauth_verifier が必要になります。トークンとシークレットはクリデンシャルに設定されます。ICredentials の独自実装を使用する場合は、これらを setter メソッドで保存できることを確認してください。

それから、このリクエストトークンをアクセストークンと交換しなければなりません:

bc. client.retrieveAccessToken(creds, oauth_verifier);

クリデンシャルは OAuthClient.authenticate によって設定されたこれらのトークンを含んでいるはずです。oauth_verifier は上述の手順にあるコールバックによって設定されます。

これが完了すると、リクエストを署名して、ワークフローを実行したユーザに関連するデータを取得するために必要な全てのものが、クリデンシャルの中に含まれます。

h2. <a>リクエストの署名</a>

適切な ICredentials を使うと、どのようなリクエストでも署名することができます; 現在のセッションに制限されません。リクエストは play.libs.WS を使って行われます:

署名されない古典的なリクエストは以下のようになります:

bc. WS.url(url).get();

一方、署名されたリクエストは以下のようになります:

bc. WS.url(client.sign(creds, url)).get();

GET リクエストでない場合、URL の替わりにリクエストを署名し、メソッドに渡す必要があります:

bc. client.sign(creds, WS.url(url), "POST").post();

h2. <a>サンプル</a>

シンプルな "twitter サンプル":http://github.com/erwan/playoauthclient/tree/master/example/twitter/ が利用可能です。
