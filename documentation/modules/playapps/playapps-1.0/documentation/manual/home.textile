h1. 新しい play プロジェクトの作成と playapps.net へのデプロイ

新しい play アプリケーションを数分で playapps にデプロイすることができます。さあ、始めましょう。

h2. <a>play-1.0.3 のダウンロード</a>

現在、playapps へインストールすることができるのは play-1.0.3 で動作するアプリケーションのみです。play-1.0.3 のバイナリリリースを "http://www.playframework.org":http://www.playframework.org からダウンロードして、"インストールしてください":http://www.playframework.org/documentation/1.0.3/install 。

h2. <a>'playapps' モジュールのインストール</a>

"playapps":http://www.playframework.org/modules/playapps モジュールを使うことで、アプリケーションのデプロイがより簡単になります。'**play install playapps**' をタイプして、playapps モジュールをローカルにインストールしてください:

bc. ~$ play install playapps
~        _            _ 
~  _ __ | | __ _ _  _| |
~ | '_ \| |/ _' | || |_|
~ |  __/|_|\____|\__ (_)
~ |_|            |__/   
~
~ play! 1.0.3, http://www.playframework.org
~ framework ID is dev
~
~ Will install playapps-1.0
~ This module is compatible with: 1.0.3
~ Do you want to install this version (y/n)? y
~ Installing module playapps-1.0...
~
~ Fetching http://www.playframework.org/modules/playapps-1.0.zip
~ [--------------------------100%-------------------------] 17.6 KiB/s   
~ Unzipping...
~
~ Module playapps-1.0 is installed!
~ You can now use it by add adding this line to application.conf file:
~
~ module.playapps=${play.path}/modules/playapps-1.0
~

h4. 新しいプロジェクトの作成

ここで、標準的な '**play new {projectname}**' コマンドを使って新しい play アプリケーションを作成することができます。 '**--with playapps**' オプションを指定することで、playapps モジュールは playapps ホスティング向けに **application.conf** ファイルの準備を整えます。

bc. ~$ play new my-test-project --with playapps
~        _            _ 
~  _ __ | | __ _ _  _| |
~ | '_ \| |/ _' | || |_|
~ |  __/|_|\____|\__ (_)
~ |_|            |__/   
~
~ play! 1.0.3, http://www.playframework.org
~ framework ID is dev
~
~ The new application will be created in ~/my-test-project
~ What is the application name? Test project
~
~ Adding playapps.net default configuration to application.conf
~

プロジェクトが作成されたら、 **application.conf** ファイルを確認することができます。

bc. # playapps.net configuration
# ~~~~~
%playapps.application.mode=prod
%playapps.application.log=INFO
%playapps.db=mysql:play:play@play

ご覧のとおり、このファイルには **playapps** 環境向けのデフォルト設定が含まれています。play の環境管理について、"関連する playframework.org ドキュメントページ":http://www.playframework.org/documentation/1.0.3/ids で詳しく学ぶことができます。

h2. <a>スロットへのデプロイ</a>

既存のスロットにアプリケーションをデプロイする最も簡単な方法は、 '**playapps:deploy**' コマンドを使用することです。このスクリプトは、初めに playapps.net アカウント情報を尋ねます:

bc. ~$ play playapps:deploy my-test-project/
~        _            _ 
~  _ __ | | __ _ _  _| |
~ | '_ \| |/ _' | || |_|
~ |  __/|_|\____|\__ (_)
~ |_|            |__/   
~
~ play! 1.0.3, http://www.playframework.org
~ framework ID is dev
~
~ Creating archive from ~/my-test-project to ~/tmp/my-test-project.zip ...
~ Done (0MB)
~ 
~ What is your email? gbo@zenexity.fr
~ What is your password?

その後、新しいアプリケーションをデプロイするスロットを選択します:

bc. ~ Connected, choose your application:
~ 	1. playapps.net
~ 	2. mytest
~ ? 2

スクリプトはアプリケーションの状態をチェックします。アプリケーションの新しいバージョンをデプロイするために、playapps はスロットを **メンテナンスモード** に設定します。これは play アプリケーションを停止し、HTTP サーバをプライベートモードに切り替えることを意味します。このため、デプロイ作業中にユーザがアプリケーションにアクセスしようとした場合、メンテンナンスページが表示されます。

そこで、アプリケーションを一時的にシャットダウンしたい場合は、'y' と回答します:

bc. ~ Checking application state...
~
~ We need to stop your application and set the HTTP server in maintenance 
~ before before deploying
~ Are you sure [y/N]? y

ここで、このスクリプトはバックアップの存在を確認します。この段階で、デプロイ処理の前にスナップショットのバックアップを作成するかどうかを playapps.net に尋ねることができます。もし新しいバージョンで何かがおかしい場合、動作する最新のバージョンに速やかにロールバックすることができます。このバージョンにはアプリケーションそのものだけではなく、すべてのストレージと MySQL のデータも同様に含まれています。

このため、'y' と回答するのが一般的に良い考えです:

bc. ~ Setting the slot in maintenance mode...
~ Ok
~
~ Verifying backups...
~ Your last backup has been created on Thu Jun  3 12:00:01 2010
~ Do you want to create a backup now [Y/n]? y

いよいよアプリケーションが、インストールされるためにスロットにアップロードされます。

bc. ~ Uploading archive...
~ [--------------------------100%-------------------------] 
~
~ Installing....
~ [--------------------------100%-------------------------] 

アプリケーションがインストールされると、スクリプトはアプリケーションを開始するか尋ねます。直ちに開始したい場合は 'y' と回答してください:

bc. ~ Do you want to start the application now [Y/n]? y
~
~ Starting the application...
~ Started
~
~ You can use your private access to check the application at http://ukxsbnjyzmapwxx
~ Then open the HTTP server using the web console at 
~ http://playapps.net/gbo@zenexity.fr/mytest

アプリケーションがインストールされ、開始された時点では、HTTP サーバはプライベートアクセスモードのままです。これは、ユーザは未だにアプリケーションにアクセスできないということです。あなた自身がプライベートアクセスを使って全てが問題ないことを確認することは、一般的に良い考えです。

アプリケーションの準備が整ったことを確信したら、playapps.net マネージャにアクセスし、再び HTTP サーバを開放します。

完了です！これでアプリケーションは実行状態になります。

h2. <a>playapps デプロイにおける既存アプリケーションへの準備</a>

既存の play プロジェクトを更新するためには、まず '**playapps**' モジュールをインストールし、次のようにして **application.conf** ファイルを更新します:

bc. playapps.module=${play.path}/modules/playapps-1.0

その後、 **playapps** 環境用の設定をオプションを定義しなければなりません。以下の行を **application.conf** に追加してください:

bc. %playapps.application.mode=prod
%playapps.application.log=INFO
%playapps.db=mysql:play:play@play
%playapps.http.port=9000

playapps では **prod モード** と **HTTP 9000 番ポート** での実行が必要です。アプリケーションがデータベースを使う場合には、db プロパティを '**mysql:play:play@play**' に設定する必要があります。そして、ログレベルは **DEBUG** から **ERROR** のどれを指定することも可能です。

