h1. ==Carbonate==

Play アプリケーションへのデータベース移行を作成し、実行するためのモジュールです。このモジュールを利用するためには、 **application.conf** ファイルに下記のように追記する必要があります。

bc. module.carbonate=${play.path}/modules/carbonate-{version}

次のようにデータベースを設定し、carbonate パスを **application.conf** ファイルに追加します。 _ここでは、 local-mysql というIDを利用しています。_ 

bc. %local-mysql.db=
%local-mysql.db.url=jdbc:mysql://localhost:3306/play-test
%local-mysql.db.driver=com.mysql.jdbc.Driver
%local-mysql.db.user=root
%local-mysql.db.pass=
%local-mysql.jpa.ddl=none
%local-mysql.carbonate.path=conf/migrations

次のコマンドで、新しい移行データを作成できます。

bc. play carbonate:new --%local-mysql

そのツールは移行ファイル名に追加される移行用の記述を要求し、 **carbonate.path** プロパティに定義されたパスに移行ファイルを作成します。データベースとモデルを比較し、スキーマ更新 SQL を生成します。

**プロダクトを利用する前にツールによって生成された移行データをチェックするようにしてください!**

新しい移行データは次に Play アプリケーションを実行するタイミングでデータベースに適用されます。

bc. play run --%local-mysql

設定ファイル内の **carbonate.path** にデータが存在しない場合、移行が無視されることに注意してください。( Play 内でメモリデータベースを利用したい場合はこの方が都合が良いでしょう。)

h3. ==Configuration options==

bc. carbonate.path       - Path to the migrations folder. If missing the migrations will not be run.
carbonate.delimeter      - Delimeter string to use to separate the generated migration statements. Default value ';'.
carbonate.comment        - Comment string used in migrations. Default value '--'.